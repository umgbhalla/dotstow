#!/usr/bin/env bash

DATE_START="$(date +%Y0101)"
DATE_END="$(date +%Y1231)"

epoch_start="$(date --date="$DATE_START" +%s)"
epoch_end="$(date --date="$DATE_END" +%s)"
epoch_today="$(date +%s)"

days_total=$(( ( epoch_end - epoch_start ) / ( 3600 * 24 ) ))
days_passed=$(( ( epoch_today - epoch_start ) / ( 3600 * 24 ) ))
days_left=$(( days_total - days_passed ))

progressbar() {
  # Author : Teddy Skarin
  # Process data
  _progress=$(( $1 * 100 / $2 ))
  _done=$(( ( _progress * 4 ) / 10 ))
  _left=$(( 40 - _done ))
  # Build progressbar string lengths
  _done=$(printf "%${_done}s")
  _left=$(printf "%${_left}s")

  # 1.2 Build progressbar strings and print the ProgressBar line
  # 1.2.1 Output example:
  # 1.2.1.1 Progress : [████████████████████████████████████████] 100%
  printf "\rProgress : ${_done// /█}${_left// /░} ${_progress}%%\n"
  }

printf '\n'
progressbar "$days_passed" "$days_total"
printf '%14s / %s days (%s days left)\n\n' "$days_passed" "$days_total" "$days_left"
