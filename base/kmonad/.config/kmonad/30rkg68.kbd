
(defcfg
  ;; For Linux
  input  (device-file "/dev/input/by-id/usb-SINO_WEALTH_RK_Bluetooth_Keyboard-event-kbd")
  output (uinput-sink "My KMonad output" "sleep 2 ")
  ;; cmp-seq ralt    ;; Set the compose key to `RightAlt'
  ;; cmp-seq-delay 5 ;; 5ms delay between each compose-key sequence press

  ;; Comment this if you want unhandled events not to be emitted
  fallthrough false

  ;; Set this to false to disable any command-execution in KMonad
  allow-cmd false
)

;; (defalias num (layer-switch numbers))
(defalias 
  base  (layer-switch base)
  ;; Haskell macros because 1-button-bind is awesome
  ::  #(: :)
  ->  #(- > spc)
  <-  #(< - spc)
  ==  #(= = spc)
  =>  #(= > spc)
  <=  #(< = spc)
  *>  #(* > spc)
  <*  #(< * spc)
  ^.  #(^ .)
  -|  #(- - spc | spc)
  -^  #(- - spc ^ spc)
  <|> #(< | > spc)
  <$> #(< $ > spc)
  <*> #(< * > spc)
  >>= #(> > = spc)
  =<< #(= < < spc)

  a (tap-hold 145 a #(A XX))
  b (tap-hold 145 b #(B XX))
  c (tap-hold 145 c #(C XX))
  d (tap-hold 145 d #(D XX))
  e (tap-hold 145 e #(E XX))
  f (tap-hold 145 f #(F XX))
  g (tap-hold 145 g #(G XX))
  h (tap-hold 145 h #(H XX))
  i (tap-hold 145 i #(I XX))
  j (tap-hold 145 j #(J XX))
  k (tap-hold 145 k #(K XX))
  l (tap-hold 145 l #(L XX))
  m (tap-hold 145 m #(M XX))
  n (tap-hold 145 n #(N XX))
  o (tap-hold 145 o #(O XX))
  p (tap-hold 145 p #(P XX))
  q (tap-hold 145 q #(Q XX))
  r (tap-hold 145 r #(R XX))
  s (tap-hold 145 s #(S XX))
  t (tap-hold 145 t #(T XX))
  u (tap-hold 145 u #(U XX))
  v (tap-hold 145 v #(V XX))
  w (tap-hold 145 w #(W XX))
  x (tap-hold 145 x #(X XX))
  y (tap-hold 145 y #(Y XX))
  z (tap-hold 145 z #(Z XX))
  1 (tap-hold 145 1 #(! XX))
  2 (tap-hold 145 2 #(@ XX))
  3 (tap-hold 145 3 #(# XX))
  4 (tap-hold 145 4 #($ XX))
  5 (tap-hold 145 5 #(% XX))
  6 (tap-hold 145 6 #(^ XX))
  7 (tap-hold 145 7 #(& XX))
  8 (tap-hold 145 8 #(* XX))
  9 (tap-hold 145 9 #(\( XX))
  0 (tap-hold 145 0 #(\) XX))
  [ (tap-hold 145 [ #({ XX))
  ] (tap-hold 145 ] #(} XX))

  - (tap-hold 145 - #(\_ XX))
  = (tap-hold 145 = #(+ XX))

  \ (tap-hold 145 \ #(| XX))

  ; (tap-hold 145 ; #(: XX))
  ' (tap-hold 145 ' #(" XX))
  , (tap-hold 145 , #(< XX))
  . (tap-hold 145 . #(> XX))
  / (tap-hold 145 / #(? XX))
  grv (tap-hold 145 grv #(~ XX))

)
 
(defsrc
          q     w     e     r     t     y     u     i     o     p
          a     s     d     f     g     h     j     k     l     ; 
          z     x     c     v     b     n     m     ,     .     /
)
(deflayer base
          q     w     e     r     t     y     u     i     o     p
          a     s     d     f     g     h     j     k     l     esc
          z     x     c     v     _     _     b     n     m     /
)

(deflayer sym1
          !     @     #     $    %      ^     &     *     (     )
          -     _     =     +    ,      .     ;     :     '     "  
          1     2     3     4    5      6     7     8     9     0
)

(deflayer sym2
          `     ~     \     (     [     {     }     ]     )     |  
          <     >     /     ?     up    _     _     _     _     _
          _     _     _     lft   down  rght  _     _     _     _
)

(deflayer clear
          _     _     _     _     _     _     _     _     _     _
          _     _     _     _     _     _     _     _     _     _
          _     _     _     _     _     _     _     _     _     _
)


(deflayer clear
          _     _     _     _     _     _     _     _     _     _
          _     _     _     _     _     _     _     _     _     _
          _     _     _     _     _     _     _     _     _     _
)

